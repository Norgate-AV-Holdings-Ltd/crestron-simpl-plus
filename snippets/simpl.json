{
    "For Loop": {
        "prefix":"for",
        "body": [
            "integer ${1:variable};",
            "for (${1:variable}=1 to ${2:maxVal}){",
            "\t$0${3://todo: code};",
            "}"
        ],
        "description": "for loop"
    },

    "RegisterDelegate": {
        "prefix":"registerdelegate",
        "body": [
            "RegisterDelegate(${1:objectName}, ${2:delegateName}, ${3:callbackName})",
            "",
            "callback function ${3:callbackName}(${4:argsType} args)",
            "{",
            "\t$0${5://todo: code};",
            "}"
        ],
        "description": "Register Delegates and generate callback function."
    },

    "GetLastModifiedArrayIndex": {
        "prefix":"getlast",
        "body": [
            "GetLastModifiedArrayIndex()"
        ],
        "description": "Returns last modified array index"
    },

    "Parameters":{
        "prefix":"param",
        "body": [
            "INTEGER_PARAMETER ${1:parameterName};",
            "// SIGNED_INTEGER_PARAMETER",
            "// LONG_INTEGER_PARAMETER",
            "// SIGNED_LONG_INTEGER_PARAMETER",
            "// STRING_PARAMETER",
            "",
            "/*******************************************************************************************",
            "Parameter Properties",
            "(Uncomment and declare parameter properties as needed)",
            "*******************************************************************************************/",
            "",
            "#BEGIN_PARAMETER_PROPERTIES ${1:parameterName}",
            "propValidUnits = ${2:parameterUnit};",
            "// propDefaultUnit = // unitString, unitDecimal, unitHex, unitPercent, unitCharacter, unitTime or unitTicks;",
            "// propBounds = lower_bound , upper_bound;",
            "// propDefaultValue = ;  // or, propDefaultValue = \"\";",
            "// propList = // { \"value\" , \"label\" } , { \"value\" , \"label\" } , ... ;",
            "// propShortDescription = \"status_bar_hint_text\";",
            "// #BEGIN_PROP_FULL_DESCRIPTION  line_1...  line_2...  line_n  #END_PROP_FULL_DESCRIPTION",
            "// #BEGIN_PROP_NOTES line_1...  line_2...  line_n  #END_PROP_NOTES",
            "#END_PARAMETER_PROPERTIES"
        ]
    },

    "Template":{
        "prefix":"template",
        "body": [
            "#DEFAULT_VOLATILE",
            "#ENABLE_STACK_CHECKING",
            "#ENABLE_TRACE",
            "//#DEFINE_CONSTANT MAXIO 16",
            "",
            "#HELP_BEGIN",
            "${1:help_text}",
            "#HELP_END",
            "//#USER_SIMPLSHARP_LIBRARY \"LibraryName\"",
            "",
            "",
            "DIGITAL_INPUT ",
            "${2:sigName}",
            "ANALOG_INPUT ",
            "STRING_INPUT ",
            "",
            "DIGITAL_OUTPUT ",
            "ANALOG_OUTPUT ",
            "STRING_OUTPUT ",
            "",
            "PUSH ${2:sigName}",
            "{",
            "    ${3://todo: code}",
            "}",
            "",
            "",
            "/*******************************************************************************************",
            "Main()",
            "Uncomment and place one-time startup code here",
            "(This code will get called when the system starts up)",
            "*******************************************************************************************/",
            "",
            "Function Main()",
            "{",
            "    // TODO:  Add code here",
            "    // Initialize declared global and local variables/arrays as needed.",
            "",
            "    // WaitForInitializationComplete();",
            "    // If you are reading any Input or Output variables, uncomment",
            "    //   the WaitForInitializationComplete statement above and read",
            "    //   them afterwards.  Input/Output variables will not have",
            "    //   their correct values set until after the logic processor",
            "    //   runs and propagates the values to them.",
            "}"    
        ],
        "description": "simpl+ template"
    }

}